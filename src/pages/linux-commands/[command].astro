---
import type { Frontmatter } from '@/type';
// import BlogPost from '@components/BlogPost.astro';
import BaseLayout from '@layouts/BaseLayout.astro';
import type { MarkdownInstance } from 'astro';

export async function getStaticPaths() {
    const allPosts: MarkdownInstance<Frontmatter>[] = await Astro.glob<Frontmatter>('./contents/*.md');

    return [];
    // const uniqueTags = [...new Set(allPosts.flatMap(post => post.frontmatter.tags))];

    // return uniqueTags.map(tag => {
    //     const filteredPosts = allPosts.filter(post => post.frontmatter.tags.includes(tag));

    //     return {
    //         params: { tag },
    //         props: { posts: filteredPosts },
    //     };
    // });
}

const { command } = Astro.params;
const { posts } = Astro.props;
---

<BaseLayout>
<!-- <BaseLayout pageTitle={tag}> -->
    <!-- <p>{tag}のタグが付いた記事</p>
    <ul>
        {
            posts.map((post) => (
                <BlogPost url={post.url} title={post.frontmatter.title} />
            ))
        }
    </ul> -->
</BaseLayout>
