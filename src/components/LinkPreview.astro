---
import type { OGData } from '@/type';
import { decode } from 'html-entities';
import { parse } from 'node-html-parser';

interface Props {
    url: string;
}

const { url } = Astro.props;

async function fetchOGTags(url: string): Promise<OGData> {
    try {
        const response = await fetch(url);
        const html = await response.text();
        const root = parse(html);

        const getMetaContent = (property: string): string | undefined => {
            const meta = root.querySelector(`meta[property="og:${property}"]`);
            return meta?.getAttribute('content');
        };

        const ogData: OGData = {
            title: getMetaContent('title'),
            description: getMetaContent('description'),
            image: getMetaContent('image'),
            url: getMetaContent('url'),
            siteName: getMetaContent('site_name'),
        };

        if (!ogData.title) {
            // フォールバック
            ogData.title = root.querySelector('title')?.text || '';
        }
        if (!ogData.description) {
            const metaDesc = root.querySelector('meta[name="description"]');
            ogData.description = metaDesc?.getAttribute('content') || '';
        }

        return ogData;
    } catch (error) {
        console.error('OGタグの取得に失敗しました:', error);
        return {};
    }
}

const ogData = await fetchOGTags(url);
---

<style>

</style>

{ogData.title ? (
    <a
        href={url}
        target="_blank"
        rel="noopener noreferrer"
        class="rounded-lg flex my-4 no-underline"
    >
        <div class="flex w-full sl-link-card astro-ggf2imng">
            <div class="flex-1 p-3">
                <h4>{ogData.title}</h4>
                {ogData.description && <p>{decode(ogData.description)}</p>}
                <span class="url">{ogData.siteName || new URL(url).hostname}</span>
            </div>
            {
                ogData.image &&
                <img
                    src={ogData.image}
                    alt="thumbnail"
                    class="w-1/3 rounded-r-lg object-cover"
                    style="margin: 0; color: var(--sl-color-gray-4)"
                />
            }
        </div>
    </a>
) : (
    <p>プレビューを表示できませんでした。</p>
)}

