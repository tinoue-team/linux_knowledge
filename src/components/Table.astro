---
import { sanitizeAndDecodeHtml } from '@utils/htmlUtils';
import { marked } from 'marked';
interface Props {
    columns: string[];
    data: string[][];
    align?: 'left' | 'center' | 'right';
    caption?: string;
}

const { columns, data, align = 'left', caption } = Astro.props as Props;

// data 内のそれぞれのレコード(要素である)の配列の要素数 と column の要素数が一致するか確認する処理を入れる
// データの検証: 各行の要素数が列の数と一致するか
const isValid = data.every(row => row.length === columns.length);

if (!isValid) {
    throw new Error('Each row in data must have the same number of elements as columns.');
}

columns.forEach((cell, i) => {
    const parsed = marked.parse(cell) as string;
    columns[i] = parsed
        .replace(/^\s*<p>\s*/gm, '') // 開始の <p> タグを削除
        .replace(/\s*<\/p>\s*$/gm, '') // 終了の </p> タグを削除
        .trim(); // 余分な空白を削除
});

data.forEach((row, i) => {
    row.forEach((cell, j) => {
        const parsed = marked.parse(cell) as string;
        data[i][j] = parsed
            .replace(/^\s*<p>\s*/gm, '') // 開始の <p> タグを削除
            .replace(/\s*<\/p>\s*$/gm, '') // 終了の </p> タグを削除
            .trim(); // 余分な空白を削除
    });
});

let parsedCaption = '';
if (caption) {
    parsedCaption = marked.parse(caption) as string;
    parsedCaption
        .replace(/^\s*<p>\s*/gm, '') // 開始の <p> タグを削除
        .replace(/\s*<\/p>\s*$/gm, '') // 終了の </p> タグを削除
        .trim(); // 余分な空白を削除
}

// data.map(row => row.map(cell => console.log(sanitizeAndDecodeHtml(cell))));
---
<!-- <div class=""> -->
<div class="not-content">
    <!-- not-content で width: 100% を有効化できる -->
    <table class="
        w-full
        overflow-auto
        text-base
        border-spacing-0
        border-collapse
        border
        border-transparent
        rounded-md
        shadow-sbump
        "
        style={{
            // height: '240px',
            // boxShadow: 'var(--inset-shadow)',
            textAlign: align
        }}

    >
        {typeof caption === 'string' &&
            <caption
                set:html={sanitizeAndDecodeHtml(parsedCaption)}
                class="caption-top py-2"
            />
        }
        <thead class="">
        <!-- <thead class="after:content-[''] after:p-1"> -->
            <tr
                class=""
            >
                {columns.map((column, index) => (
                    <th
                        set:html={sanitizeAndDecodeHtml(column)}
                        is:raw
                        class={`
                            text-white
                            px-2
                            py-1
                            bg-gray-600/50

                            border-spacing-0.5
                            first:rounded-tl-md
                            last:rounded-tr-md
                            shadow-xs-distinct
                        `}
                        style="
                            text-shadow: var(--text-shadow);
                        "
                    />
                ))}
            </tr>
        </thead>
        <tbody>
            {data.map((row, rowIndex) => (
                <tr class="
                    hover:bg-accent-800
                    hover:text-white
                    last:rounded-bl-md
                    last:rounded-br-md
                ">
                    {row.map((cell, cellIndex) => (
                        <td
                            set:html={sanitizeAndDecodeHtml(cell)}
                            class={`
                                p-2
                                border
                                border-gray-500
                                first:border-l-0
                                shadow-xs-depressed
                                ${rowIndex === data.length - 1 && cellIndex === 0 ? 'rounded-bl-md' : ''}
                                ${rowIndex === data.length - 1 && cellIndex === row.length - 1 ? 'rounded-br-md' : ''}
                            `}
                        />
                    ))}
                </tr>
            ))}
        </tbody>
    </table>

    <!-- <h1 class="after:content-['👋🏼']">
  Hello world!
</h1> -->

</div>
